
STAGE 2(SYMANTIC ANAYSIS)

In this phase, a program is given to your code, if that program has followed the lexical and syntactic rules of the language, it will create an __Abstract Syntax Tree__, otherwise, it must print the appropriate error with line and column number. 

To make the file

>>>bison Bison_Rule.y                              // creates Bison_Rule.tab.c
>>>flex Lex_Rule.lex                               // creates lex.yy.c
>>>bison -d Bison_Rule.y -o myapp.cpp              // creates the myapp.cpp and myapp.hpp 
                                                      file
>>>g++ -o runner Bison_Rule.tab.c lex.yy.c         // creates the nunner.exe file using
                                                      the Bison_Rule.tab.c and lex.yy.c 

Instructions:
	>>>my [testCaseName] 0
		• To display tokens and their values along with the display of terminals that go
		to Epsilon.
	>>>my [testCaseName] 1
		• To display tokens along with the terminals that go to Epsilon.
	>>>my [testCaseName] 2
		• To display tokens and their values.
	>>>my [testCaseName] 3
		• To display tokens.



To test:
	>>>runner [testfilename] [mode]